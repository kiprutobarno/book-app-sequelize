{"version":3,"sources":["../../../api/server/controllers/bookController.js"],"names":["util","Util","BookController","req","res","BookService","getAllBooks","books","length","setSuccess","setError","send","body","title","price","description","book","addBook","createdBook","details","id","params","Number","updateBook","bookUpdate","getBook","deleteBook"],"mappings":"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","sourcesContent":["import BookService from \"../services/bookService\";\nimport Util from \"../utils/Utils\";\n\nconst util = new Util();\n\nclass BookController {\n  /**\n   *\n   * @param {Request} req\n   * @param {Response} res\n   */\n  static async getAllBooks(req, res) {\n    try {\n      const books = await BookService.getAllBooks();\n      if (books.length > 0) {\n        util.setSuccess(200, \"Books retrieved\", books);\n      } else {\n        util.setError(404, \"No books found\");\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n  /**\n   *\n   * @param {Request} req\n   * @param {Response} res\n   */\n\n  static async addBook(req, res) {\n    const { title, price, description } = req.body;\n    if (!title || !price || !description) {\n      util.setError(400, \"Missing details\");\n    }\n    const book = { title, price, description };\n    try {\n      const createdBook = await BookService.addBook(book);\n      util.setSuccess(201, \"Book successfully added\", createdBook);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async updateBook(req, res) {\n    const details = req.body;\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, \"Use a numeric value\");\n      return util.send(res);\n    }\n\n    try {\n      const bookUpdate = await BookService.updateBook(id, details);\n      if (!bookUpdate) {\n        util.setError(404, `Cannot find book with id ${id}`);\n      } else {\n        util.setSuccess(200, \"Book successfully updated\", bookUpdate);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async getBook(req, res) {\n    const { id } = req.params;\n    if (!Number(id)) {\n      util.setError(400, \"Input a numerical value\");\n      return util.send(res);\n    }\n    try {\n      const book = await BookService.getBook(id);\n      if (!book) {\n        util.setError(404, `Cannot find book with id ${id}`);\n      } else {\n        util.setSuccess(200, \"Success\", book);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async deleteBook(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, \"Input a numeric value\");\n      return util.send(res);\n    }\n    try {\n      const deleteBook = await BookService.deleteBook(id);\n      if (!deleteBook) {\n        util.setError(400, `Book with id ${id} not found`);\n      } else {\n        util.setSuccess(200, \"Book successfully deleted\");\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n\nexport default BookController;\n"],"file":"bookController.js"}